name: pytest

on:
    pull_request:
        types: [auto_merge_enabled, opened, edited, closed, ready_for_review, synchronize]
    pull_request_review:
        types: [submitted, edited, dismissed]

env:
    PYTHON_VERSION: 3.11.4
    POETRY_VERSION: 1.5.1

jobs:
    run_pytest:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            
            - name: Install python
              uses: actions/setup-python@v4.7.0
              with:
                  python-version: ${{ env.PYTHON_VERSION }}

            - name: Load cached Poetry installation
              id: cached-poetry-install
              uses: actions/cache@v3.3.1
              with:
                path: ~/.local
                key: poetry-${{ env.POETRY_VERSION }}-${{ hashFiles('**/poetry.lock') }}

            - name: Install Poetry
              uses: snok/install-poetry@v1.3.4
              with:
                version: ${{ env.POETRY_VERSION }}
                virtualenvs-create: true
                virtualenvs-in-project: true
                installer-parallel: true

            - name: Load cached venv
              id: cached-poetry-dependecies
              uses: actions/cache@v3.3.1
              with:
                path: .venv
                key: .venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

            - name: Install dependencies
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
              run: poetry install --without code_quality
        
            - name: Setup docker-compose up -d
              run: cd ./tests && docker-compose up -d

            - name: pytest
              run: |
                poetry run pytest ./tests
                    